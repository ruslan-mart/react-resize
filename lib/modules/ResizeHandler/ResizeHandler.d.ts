import type { HandlersProps, ResizeStateChangeEventHandler } from '../../types/Handlers';
import { DirectionHandler } from './constants';
import type { BoxSizing, StartResizeOptions } from './types';
export declare class ResizeHandler {
    containerNode: HTMLElement | null;
    boxSizing: BoxSizing;
    disabled: boolean;
    handlers: HandlersProps;
    private cacheClientValues;
    private currentValues;
    private direction;
    private heightIsMinimized;
    private heightIsMaximized;
    private initialValues;
    private isResizing;
    private origin;
    private widthIsMinimized;
    private widthIsMaximized;
    private readonly onStateChange;
    private readonly startValues;
    private readonly side;
    constructor(onStateChange: ResizeStateChangeEventHandler);
    destroy(): void;
    startResize({ clientX, clientY, direction, origin }: StartResizeOptions): void;
    private end;
    private defineSideMap;
    private getBoxValues;
    private handleMouseMove;
    private handleMouseUp;
    private handleTouchMove;
    private handleTouchEnd;
    private move;
    private updateDOM;
    private [DirectionHandler.HANDLE_BOTTOM];
    private [DirectionHandler.HANDLE_BOTTOM_LEFT];
    private [DirectionHandler.HANDLE_BOTTOM_RIGHT];
    private [DirectionHandler.HANDLE_LEFT];
    private [DirectionHandler.HANDLE_RIGHT];
    private [DirectionHandler.HANDLE_TOP];
    private [DirectionHandler.HANDLE_TOP_LEFT];
    private [DirectionHandler.HANDLE_TOP_RIGHT];
}
